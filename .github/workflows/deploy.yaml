name: Build and Push Docker image to ECR

on:
  push:
    branches:
      - main

  workflow_run:
    workflows: ["Terraform Plan and Apply"]
    types:
      - completed

jobs:
  check-for-terraform-changes:
    runs-on: ubuntu-latest
    outputs:
      terraform_changed: ${{ steps.check.outputs.terraform_changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if Terraform directory changed
        id: check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^terraform/'; then
            echo "Terraform directory changed."
            echo "::set-output name=terraform_changed::true"
          else
            echo "No changes in the Terraform directory."
            echo "::set-output name=terraform_changed::false"
          fi
  terraform-config:
    needs: check-for-terraform-changes
    runs-on: ubuntu-latest
    if: ${{ needs.check-terraform-changes.outputs.terraform_changed == 'true' }}
    uses: mikeheft/go-backend/.github/workflows/terraform.yaml@main # Calls the reusable Terraform workflow
    with:
      aws-region: "us-west-2"
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-and-push:
    runs-on: ubuntu-latest

    # Only run if the terraform worflow was successful
    if: ${{ github.event.workflow_run.conclusion != 'failure' }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
